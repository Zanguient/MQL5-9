int GetMinute()
  {
   switch(Period())
     {
      case PERIOD_M1: return(1);
      case PERIOD_M2: return(2);
      case PERIOD_M3: return(3);
      case PERIOD_M4: return(4);
      case PERIOD_M5: return(5);
      case PERIOD_M6: return(6);
      case PERIOD_M10: return(10);
      case PERIOD_M12: return(12);
      case PERIOD_M15: return(15);
      case PERIOD_M20: return(20);
      case PERIOD_M30: return(30);
      case PERIOD_H1: return(60);
      case PERIOD_H2: return(120);
      case PERIOD_H3: return(180);
      case PERIOD_H4: return(240);
      case PERIOD_H6: return(360);
      case PERIOD_H8: return(480);
      case PERIOD_H12: return(720);
      case PERIOD_D1: return(1440);
      case PERIOD_W1: return(10080);
      case PERIOD_MN1: return(43200);
     }
   return(1);
  }
   MqlTick ultimoTick;
   MqlRates rates[];
   SymbolInfoTick(Symbol(),ultimoTick);
   if(CopyRates(Symbol(),PERIOD_CURRENT,0,1,rates)<1)return;
   double i;
   long m,s;
   m=rates[0].time+GetMinute()*60-ultimoTick.time;
   i=m/60.0;
   s=m%60;
   m=(m-m%60)/60;
   labelCandleTimer.Text("Candle: "+ IntegerToString(m,0,' ')+" : "+IntegerToString(s,0,' '));
